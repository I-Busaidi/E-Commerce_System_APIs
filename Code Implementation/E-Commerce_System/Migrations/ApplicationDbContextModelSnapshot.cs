// <auto-generated />
using System;
using E_Commerce_System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace E_Commerce_System.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("E_Commerce_System.Models.Order", b =>
                {
                    b.Property<int>("orderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("orderId"));

                    b.Property<DateTime>("orderDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("orderTotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("userId")
                        .HasColumnType("int");

                    b.HasKey("orderId");

                    b.HasIndex("userId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("E_Commerce_System.Models.OrderProducts", b =>
                {
                    b.Property<int>("orderId")
                        .HasColumnType("int");

                    b.Property<int>("productId")
                        .HasColumnType("int");

                    b.Property<int>("productQuantity")
                        .HasColumnType("int");

                    b.HasKey("orderId", "productId");

                    b.HasIndex("productId");

                    b.ToTable("OrdersProducts");
                });

            modelBuilder.Entity("E_Commerce_System.Models.Product", b =>
                {
                    b.Property<int>("productId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("productId"));

                    b.Property<string>("productDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("productName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("productPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("productRating")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("productStock")
                        .HasColumnType("int");

                    b.HasKey("productId");

                    b.HasIndex("productName")
                        .IsUnique();

                    b.ToTable("Products");
                });

            modelBuilder.Entity("E_Commerce_System.Models.Review", b =>
                {
                    b.Property<int>("reviewId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("reviewId"));

                    b.Property<string>("comment")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int>("productId")
                        .HasColumnType("int");

                    b.Property<int>("rating")
                        .HasColumnType("int");

                    b.Property<DateTime>("reviewDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("userId")
                        .HasColumnType("int");

                    b.HasKey("reviewId");

                    b.HasIndex("productId");

                    b.HasIndex("userId");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("E_Commerce_System.Models.User", b =>
                {
                    b.Property<int>("userId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("userId"));

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("updatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("updatedByAdminId")
                        .HasColumnType("int");

                    b.Property<string>("userEmail")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("userName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("userPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("userPhone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("userRole")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("userId");

                    b.HasIndex("updatedByAdminId");

                    b.HasIndex("userEmail")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("E_Commerce_System.Models.Order", b =>
                {
                    b.HasOne("E_Commerce_System.Models.User", "Buyer")
                        .WithMany("Orders")
                        .HasForeignKey("userId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Buyer");
                });

            modelBuilder.Entity("E_Commerce_System.Models.OrderProducts", b =>
                {
                    b.HasOne("E_Commerce_System.Models.Order", "Order")
                        .WithMany("OrderProducts")
                        .HasForeignKey("orderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("E_Commerce_System.Models.Product", "Product")
                        .WithMany("ProductOrders")
                        .HasForeignKey("productId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("E_Commerce_System.Models.Review", b =>
                {
                    b.HasOne("E_Commerce_System.Models.Product", "ReviewedProduct")
                        .WithMany("ProductReviews")
                        .HasForeignKey("productId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("E_Commerce_System.Models.User", "Reviewer")
                        .WithMany("ReviewsByUser")
                        .HasForeignKey("userId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ReviewedProduct");

                    b.Navigation("Reviewer");
                });

            modelBuilder.Entity("E_Commerce_System.Models.User", b =>
                {
                    b.HasOne("E_Commerce_System.Models.User", "admin")
                        .WithMany()
                        .HasForeignKey("updatedByAdminId");

                    b.Navigation("admin");
                });

            modelBuilder.Entity("E_Commerce_System.Models.Order", b =>
                {
                    b.Navigation("OrderProducts");
                });

            modelBuilder.Entity("E_Commerce_System.Models.Product", b =>
                {
                    b.Navigation("ProductOrders");

                    b.Navigation("ProductReviews");
                });

            modelBuilder.Entity("E_Commerce_System.Models.User", b =>
                {
                    b.Navigation("Orders");

                    b.Navigation("ReviewsByUser");
                });
#pragma warning restore 612, 618
        }
    }
}
